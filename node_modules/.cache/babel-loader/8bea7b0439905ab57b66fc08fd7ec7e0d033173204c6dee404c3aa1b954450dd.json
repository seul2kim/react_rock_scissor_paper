{"ast":null,"code":"var _jsxFileName = \"/Users/dew/Desktop/reactproject/rockscissorpaper/src/component/Box.js\";\n// import React from 'react'\n\n// //컴포넌트는 항상 대문자로 시작\n// // 위아래 spell 주의\n\n// const Box = (props) => {\n//     //값이 제대로 넘어오는지 확인\n//     console.log(props); //오오오옹 이미지만 보여주면 된다. \n//     let result;\n\n//     if(\n//       props.title == \"Computer\" && props.result !== \"tile\" && props.result !== \"\" ){\n//         result = props.result == \"win\" ? \"lose\":\"win\";\n//       }else{\n//         result = props.result; \n//       }\n//   return (\n//     <div className={'box ${result}'}>\n//       <h1>{props.title}</h1>\n//       <h2>{props.item && props.item.name}</h2>\n//       <img src={props.item && props.item.img} className=\"item-img\"/>  \n//       <h2>{props.result}</h2>\n//     </div>\n//   );\n// };\n\n// export default Box\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Box = props => {\n  let result;\n  if (props.title === \"Computer\" && props.result !== \"tie\" && props.result !== \"\") {\n    // 카드가 computer카드인가? && 결과가 비긴건 아닌가? && props.result에 값이 있는가?\n    result = props.result === \"win\" ? \"lose\" : \"win\";\n  } else {\n    // 위의 경우가 아니라면 props 로 전달된 결과를 그대로 쓴다.\n    result = props.result;\n  }\n  if (props.title === \"Computer\") {\n    console.log(\"computer\", result);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `box ${result}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      \"data-testid\": \"item-name\",\n      children: props.item && props.item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"item-img\",\n      src: props.item && props.item.img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = Box;\nexport default Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Box","props","result","title","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","name","src","img","_c","$RefreshReg$"],"sources":["/Users/dew/Desktop/reactproject/rockscissorpaper/src/component/Box.js"],"sourcesContent":["// import React from 'react'\n\n// //컴포넌트는 항상 대문자로 시작\n// // 위아래 spell 주의\n\n// const Box = (props) => {\n//     //값이 제대로 넘어오는지 확인\n//     console.log(props); //오오오옹 이미지만 보여주면 된다. \n//     let result;\n\n//     if(\n//       props.title == \"Computer\" && props.result !== \"tile\" && props.result !== \"\" ){\n//         result = props.result == \"win\" ? \"lose\":\"win\";\n//       }else{\n//         result = props.result; \n//       }\n//   return (\n//     <div className={'box ${result}'}>\n//       <h1>{props.title}</h1>\n//       <h2>{props.item && props.item.name}</h2>\n//       <img src={props.item && props.item.img} className=\"item-img\"/>  \n//       <h2>{props.result}</h2>\n//     </div>\n//   );\n// };\n\n// export default Box\n\n\nimport React from \"react\";\n\nconst Box = (props) => {\n  let result;\n  if (\n    props.title === \"Computer\" &&\n    props.result !== \"tie\" &&\n    props.result !== \"\"\n  ) {\n    // 카드가 computer카드인가? && 결과가 비긴건 아닌가? && props.result에 값이 있는가?\n    result = props.result === \"win\" ? \"lose\" : \"win\";\n  } else {\n    // 위의 경우가 아니라면 props 로 전달된 결과를 그대로 쓴다.\n    result = props.result;\n  }\n  if (props.title === \"Computer\") {\n    console.log(\"computer\", result);\n  }\n\n  return (\n    <div className={`box ${result}`}>\n      <h1>{props.title}</h1>\n      <h2 data-testid=\"item-name\">{props.item && props.item.name}</h2>\n      <img className=\"item-img\" src={props.item && props.item.img} />\n      <h2>{result}</h2>\n    </div>\n  );\n};\n\nexport default Box;"],"mappings":";AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAIC,KAAK,IAAK;EACrB,IAAIC,MAAM;EACV,IACED,KAAK,CAACE,KAAK,KAAK,UAAU,IAC1BF,KAAK,CAACC,MAAM,KAAK,KAAK,IACtBD,KAAK,CAACC,MAAM,KAAK,EAAE,EACnB;IACA;IACAA,MAAM,GAAGD,KAAK,CAACC,MAAM,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK;EAClD,CAAC,MAAM;IACL;IACAA,MAAM,GAAGD,KAAK,CAACC,MAAM;EACvB;EACA,IAAID,KAAK,CAACE,KAAK,KAAK,UAAU,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,MAAM,CAAC;EACjC;EAEA,oBACEH,OAAA;IAAKO,SAAS,EAAE,OAAOJ,MAAM,EAAG;IAAAK,QAAA,gBAC9BR,OAAA;MAAAQ,QAAA,EAAKN,KAAK,CAACE;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBZ,OAAA;MAAI,eAAY,WAAW;MAAAQ,QAAA,EAAEN,KAAK,CAACW,IAAI,IAAIX,KAAK,CAACW,IAAI,CAACC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChEZ,OAAA;MAAKO,SAAS,EAAC,UAAU;MAACQ,GAAG,EAAEb,KAAK,CAACW,IAAI,IAAIX,KAAK,CAACW,IAAI,CAACG;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DZ,OAAA;MAAAQ,QAAA,EAAKL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACK,EAAA,GAzBIhB,GAAG;AA2BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}